{"version":3,"sources":["components/RouteTabs.js"],"names":["Body","lazy","__webpack_require__","e","then","bind","Store","GetHydro","FinalizeClaim","routeNames","MyTabs","withRouter","_ref","location","props","Object","_home_travis_build_NoahHydro_snowflake_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","children","match","history","passedProps","staticContext","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_8__","assign","value","includes","pathname","RouteTabs","_ref2","ein","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","basename","process","Fragment","fullWidth","indicatorColor","textColor","component","Link","to","icon","_material_ui_icons__WEBPACK_IMPORTED_MODULE_9__","label","react__WEBPACK_IMPORTED_MODULE_1__","fallback","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","react_router_dom__WEBPACK_IMPORTED_MODULE_5__","exact","path","render","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","from","_ref3","state","params","_ref4","hydroId"],"mappings":"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","file":"static/js/9.63dbc0af.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter as Router, Route, Link, Redirect, Switch } from 'react-router-dom'\nimport { withRouter } from 'react-router'\n\nimport { Tab, Tabs } from '@material-ui/core';\nimport { Home as HomeIcon } from '@material-ui/icons';\nimport { AttachMoney as MoneyIcon } from '@material-ui/icons';\nimport { Store as StoreIcon } from '@material-ui/icons';\nimport { AddLocation as AddLocationIcon } from '@material-ui/icons';\n\nconst Body = lazy(() => import('./routes/Body'))\nconst Store = lazy(() => import('./routes/DAppStore'))\nconst GetHydro = lazy(() => import('./routes/GetHydro'))\nconst FinalizeClaim = lazy(() => import('./routes/FinalizeClaim'))\n\nconst routeNames = ['/', '/dapp-store', '/get-hydro', '/claim-address']\nconst MyTabs = withRouter(({location, ...props}) => {\n  const { match, history, children, staticContext, ...passedProps } = props // eslint-disable-line no-unused-vars\n\n  return (\n    <Tabs\n      {...passedProps}\n      value={routeNames.includes(location.pathname) ? location.pathname : false}\n    >\n      {children}\n    </Tabs>\n  )\n})\n\nexport default function RouteTabs ({ ein }) {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <>\n        <MyTabs\n          fullWidth\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n        >\n          <Tab\n            component={Link}\n            value='/'\n            to=\"/\"\n            icon={<HomeIcon />}\n            label=\"Home\"\n          />\n          <Tab\n            component={Link}\n            value='/dapp-store'\n            to=\"/dapp-store\"\n            icon={<StoreIcon />}\n            label=\"Dapp Store\"\n          />\n          <Tab\n            component={Link}\n            value='/get-hydro'\n            to=\"/get-hydro\"\n            icon={<MoneyIcon />}\n            label=\"Get Hydro\"\n          />\n          <Tab\n            component={Link}\n            value='/claim-address'\n            to=\"/claim-address\"\n            icon={<AddLocationIcon />}\n            label=\"Claim Address\"\n          />\n        </MyTabs>\n\n        <Suspense fallback={<div />}>\n          <Switch>\n            <Route exact path=\"/\" render={() => <Body ein={ein}/>} />\n            <Redirect from='/dapp-store(.+)' to='/dapp-store'/>\n            <Route path=\"/dapp-store\" render={() => <Store ein={ein}/>} />\n            <Redirect from='/get-hydro(.+)' to='/get-hydro'/>\n            <Route path=\"/get-hydro\" render={() => <GetHydro />} />\n            <Route\n              path=\"/claim-address/ein/:ein\"\n              render={\n                ({ match }) => <Redirect to={{ pathname: '/claim-address', state: { ein: match.params.ein } }} />\n              }\n            />\n            <Route\n              path=\"/claim-address/hydro-id/:hydroId\"\n              render={\n                ({ match }) => <Redirect to={{ pathname: '/claim-address', state: { hydroId: match.params.hydroId } }} />\n              }\n            />\n            <Redirect from='/claim-address(.+)' to='/claim-address'/>\n            <Route path=\"/claim-address\" render={() => <FinalizeClaim />} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </>\n    </Router>\n  )\n}\n"],"sourceRoot":""}