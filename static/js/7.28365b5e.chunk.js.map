{"version":3,"sources":["components/NoEIN.js","components/common/TransactionButton.js","components/common/SignatureButton.js"],"names":["NoEIN","_useState","useState","_useState2","Object","_home_travis_build_NoahHydro_snowflake_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","hydroId","setHydroId","_useState3","_useState4","signature","setSignature","_useState5","_useState6","activeStep","setActiveStep","context","useWeb3Context","snowflakeContract","useNamedContract","_1484Address","_address","stepBack","stepForward","timestamp","useRef","Math","round","Date","message","web3js","utils","soliditySha3","account","t","v","current","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","variant","gutterBottom","color","style","display","textDecoration","component","href","target","_material_ui_core_Stepper__WEBPACK_IMPORTED_MODULE_4___default","orientation","_material_ui_core_Step__WEBPACK_IMPORTED_MODULE_5___default","key","_material_ui_core_StepLabel__WEBPACK_IMPORTED_MODULE_6___default","concat","_material_ui_core_StepContent__WEBPACK_IMPORTED_MODULE_7___default","label","helperText","margin","value","onChange","e","fullWidth","onClick","_common_SignatureButton__WEBPACK_IMPORTED_MODULE_9__","readyText","onSuccess","_common_TransactionButton__WEBPACK_IMPORTED_MODULE_10__","method","methods","createIdentityDelegated","from","r","s","onConfirmation","reRenderers","forceAccountReRender","ProgressIcon","withTheme","_ref","theme","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_3___default","size","typography","button","fontSize","TransactionButton","_ref2","show","classes","onTransactionHash","_useTransactionManage","useTransactionManager","handlers","transactionHash","receipt","_useTransactionManage2","transactionState","transactionData","sendTransaction","resetTransaction","undefined","className","ready","disabled","sendingPending","getEtherscanLink","networkId","success","error","Error","defaultProps","withStyles","backgroundColor","palette","primary","main","contrastText","&:hover","dark","grey","getContrastText","SignatureButton","_useSignPersonalManag","useSignPersonalManager","_useSignPersonalManag2","signatureState","signPersonal","resetSignature"],"mappings":"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","file":"static/js/7.28365b5e.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Typography } from '@material-ui/core'\nimport { useWeb3Context } from 'web3-react/hooks'\nimport { Button } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\n\nimport { useNamedContract } from '../common/hooks'\nimport SignatureButton from './common/SignatureButton'\nimport TransactionButton from './common/TransactionButton'\n\nexport default function NoEIN () {\n  const [hydroId, setHydroId] = useState('')\n  const [signature, setSignature] = useState('')\n  const [activeStep, setActiveStep] = useState(0)\n  const context = useWeb3Context()\n  const snowflakeContract = useNamedContract('snowflake')\n  const _1484Address = useNamedContract('1484')._address\n\n  function stepBack () {\n    setActiveStep(activeStep - 1)\n  }\n\n  function stepForward () {\n    setActiveStep(activeStep + 1)\n  }\n\n  const timestamp = useRef(Math.round(new Date() / 1000) - 120)\n  const message = context.web3js.utils.soliditySha3(\n    '0x19', '0x00', _1484Address,\n    'I authorize the creation of an Identity on my behalf.',\n    context.account,\n    context.account,\n    { t: 'address[]', v: [snowflakeContract._address] },\n    { t: 'address[]', v: [] },\n    timestamp.current\n  )\n\n  return (\n    <div>\n      <Typography variant=\"h3\" gutterBottom color=\"textPrimary\">\n        Follow the steps below to claim your Snowflake Identity, powered by{' '}\n        <Typography\n          style={{display: 'inline-block', textDecoration: 'none'}}\n          color='primary'\n          variant='h3'\n          component=\"a\"\n          href=\"https://erc1484.org/\"\n          target=\"_blank\"\n        >\n          ERC-1484\n        </Typography>\n        !\n      </Typography>\n\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        <Step key={0}>\n          <StepLabel>{activeStep === 0 ? 'Pick a Hydro ID' : `Hydro ID: ${hydroId}`}</StepLabel>\n          <StepContent>\n            <TextField\n              key='Hydro ID'\n              label='Hydro ID'\n              helperText='This is a public identifier.'\n              margin=\"normal\"\n              value={hydroId}\n              onChange={e => setHydroId(e.target.value)}\n              fullWidth\n            />\n            <Button\n              variant=\"contained\"\n              onClick={stepForward}\n            >\n              Next\n            </Button>\n          </StepContent>\n        </Step>\n\n        <Step key={1}>\n          <StepLabel>Give permission</StepLabel>\n          <StepContent>\n            <Button\n              variant=\"contained\"\n              onClick={stepBack}\n            >\n              Back\n            </Button>\n            <br />\n            <SignatureButton\n              readyText='Sign'\n              message={message}\n              onSuccess={signature => {\n                setSignature(signature)\n                stepForward()\n              }}\n            />\n          </StepContent>\n        </Step>\n\n        <Step key={2}>\n          <StepLabel>Claim your Identity</StepLabel>\n          <StepContent>\n            <Button\n              variant=\"contained\"\n              onClick={stepBack}\n            >\n              Back\n            </Button>\n            <br />\n            <TransactionButton\n              readyText='Send'\n              method={() => snowflakeContract.methods.createIdentityDelegated(\n                signature.from, signature.from, [], hydroId, signature.v, signature.r, signature.s, timestamp.current\n              )}\n              onConfirmation={context.reRenderers.forceAccountReRender}\n            />\n          </StepContent>\n        </Step>\n      </Stepper>\n\n      <Typography variant='body2' gutterBottom color=\"textPrimary\">\n        Already have an Identity and just want to use it with your current address? Linking is coming soon!\n      </Typography>\n\n      {/*<Router basename={process.env.PUBLIC_URL}>\n        <div className={classes.width} style={{margin: \"0 auto\", marginBottom: 100}}>\n          <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/claim-address\">Finalize Claim</Button>\n        </div>\n      </Router>*/}\n    </div>\n  )\n}\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { withTheme, withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types';\nimport { useWeb3Context, useTransactionManager } from 'web3-react/hooks'\nimport { getEtherscanLink } from 'web3-react/utilities'\n\nconst styles = theme => ({\n  ready: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark\n    }\n  },\n  sendingPending: {\n    backgroundColor: theme.palette.grey[300],\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    '&:hover': {\n      backgroundColor: theme.palette.grey[500]\n    }\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  success: {\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.success.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.success.dark\n    }\n  }\n})\n\nconst ProgressIcon = withTheme()(({ theme }) => <CircularProgress size={theme.typography.button.fontSize} />)\n\nfunction TransactionButton ({ show, method, readyText, classes, onTransactionHash, onConfirmation }) {\n  const context = useWeb3Context()\n  const [transactionState, transactionData, sendTransaction, resetTransaction] = useTransactionManager(\n    method, { handlers: { transactionHash: onTransactionHash, receipt: onConfirmation } }\n  )\n\n  switch (transactionState) {\n    case 'ready':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          onClick={sendTransaction}\n          className={classes.ready}\n        >\n          {readyText}\n        </Button>\n      )\n    case 'sending':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          disabled={true}\n          className={classes.sendingPending}\n        >\n          <ProgressIcon />\n        </Button>\n      )\n    case 'pending':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          className={classes.sendingPending}\n          component=\"a\"\n          href={getEtherscanLink(context.networkId, 'transaction', transactionData.transactionHash)}\n          target=\"_blank\"\n        >\n          <span>Pending Confirmation <ProgressIcon /></span>\n        </Button>\n      )\n    case 'success':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          className={classes.success}\n          component=\"a\"\n          href={getEtherscanLink(context.networkId, 'transaction', transactionData.transactionHash)}\n          target=\"_blank\"\n        >\n          <span>Success!</span>\n        </Button>\n      )\n    case 'error':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          onClick={resetTransaction}\n          className={classes.error}\n        >\n          <span>Error. Retry?</span>\n        </Button>\n      )\n    default:\n      throw Error('This should not happen™.')\n  }\n}\n\nTransactionButton.propTypes = {\n  show:              PropTypes.bool,\n  method:            PropTypes.func.isRequired,\n  readyText:         PropTypes.node.isRequired,\n  classes:           PropTypes.object.isRequired,\n  onTransactionHash: PropTypes.func,\n  onConfirmation:    PropTypes.func\n}\n\nTransactionButton.defaultProps = {\n  show:              true,\n  onTransactionHash: () => {},\n  onConfirmation:    () => {}\n}\n\nexport default withStyles(styles)(TransactionButton)\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { withTheme, withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types';\nimport { useSignPersonalManager } from 'web3-react/hooks'\n\nconst styles = theme => ({\n  ready: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark\n    }\n  },\n  sendingPending: {\n    backgroundColor: theme.palette.grey[300],\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    '&:hover': {\n      backgroundColor: theme.palette.grey[500]\n    }\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  success: {\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.success.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.success.dark\n    }\n  }\n})\n\nconst ProgressIcon = withTheme()(({ theme }) => <CircularProgress size={theme.typography.button.fontSize} />)\n\nfunction SignatureButton ({ show, message, readyText, classes, onSuccess }) {\n  // eslint-disable-next-line no-unused-vars\n  const [signatureState, _, signPersonal, resetSignature] = useSignPersonalManager(\n    message, { handlers: { success: onSuccess } }\n  )\n\n  switch (signatureState) {\n    case 'ready':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          onClick={signPersonal}\n          className={classes.ready}\n        >\n          {readyText}\n        </Button>\n      )\n    case 'pending':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          disabled={true}\n          className={classes.sendingPending}\n        >\n          <ProgressIcon />\n        </Button>\n      )\n    case 'success':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          className={classes.success}\n        >\n          <span>Success!</span>\n        </Button>\n      )\n    case 'error':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          onClick={resetSignature}\n          className={classes.error}\n        >\n          <span>Error. Retry?</span>\n        </Button>\n      )\n    default:\n      throw Error('This should not happen™.')\n  }\n}\n\nSignatureButton.propTypes = {\n  show:              PropTypes.bool,\n  message:           PropTypes.string.isRequired,\n  readyText:         PropTypes.node.isRequired,\n  classes:           PropTypes.object.isRequired,\n  onSuccess:         PropTypes.func\n}\n\nSignatureButton.defaultProps = {\n  show:              true,\n  onSuccess: () => {},\n}\n\nexport default withStyles(styles)(SignatureButton)\n"],"sourceRoot":""}