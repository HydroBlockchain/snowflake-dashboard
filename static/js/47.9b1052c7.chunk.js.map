{"version":3,"sources":["components/routes/FinalizeClaim.js","components/common/TransactionButton.js","../node_modules/@material-ui/icons/Delete.js","components/common/SignatureButton.js","../node_modules/@material-ui/icons/FileCopy.js","../node_modules/ethereumjs-util/dist/index.js"],"names":["SignWithApproving","_ref","ein","setCurrentClaim","context","useWeb3Context","_1484Contract","useNamedContract","_useState","useState","_useState2","Object","_MAMPWeb_HydroIce_HydroIceDapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","targetAddress","setTargetAddress","_useState3","undefined","_useState4","targetAddressError","setTargetAddressError","useAccountEffect","isValidChecksumAddress","methods","hasIdentity","call","then","result","_useState5","_useState6","activeStep","setActiveStep","timestamp","useRef","Math","round","Date","message","library","utils","soliditySha3","_address","current","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","_material_ui_core__WEBPACK_IMPORTED_MODULE_9__","variant","gutterBottom","color","_material_ui_core_Stepper__WEBPACK_IMPORTED_MODULE_11___default","orientation","_material_ui_core_Step__WEBPACK_IMPORTED_MODULE_12___default","key","_material_ui_core_StepLabel__WEBPACK_IMPORTED_MODULE_13___default","concat","_material_ui_core_StepContent__WEBPACK_IMPORTED_MODULE_14___default","label","helperText","error","required","margin","value","onChange","e","target","fullWidth","disabled","onClick","style","marginRight","_common_SignatureButton__WEBPACK_IMPORTED_MODULE_19__","readyText","onSuccess","signature","targetIsApproving","signingAddress","account","ApproveClaim","withStyles","theme","snackbar","maxWidth","warning","backgroundColor","palette","main","rightIcon","marginLeft","spacing","unit","white","_ref2","classes","location","claim","deleteCurrentClaim","setRedirect","useEIN","toLowerCase","href","getEtherscanLink","networkId","className","link","rel","_common_TransactionButton__WEBPACK_IMPORTED_MODULE_18__","method","addAssociatedAddress","v","r","s","onConfirmation","forceAccountReRender","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_15___default","_common_Copyable__WEBPACK_IMPORTED_MODULE_20__","placement","_ref3","encodedSignature","toRpcSig","window","origin","process","pathname","Number","join","getUrlFromClaim","_material_ui_icons_FileCopy__WEBPACK_IMPORTED_MODULE_16___default","withRouter","_ref4","history","_useSessionStorageSta","useSessionStorageState","_useSessionStorageSta2","currentClaim","_useState7","_useState8","redirect","useEffect","state","Error","includes","isInteger","now","SECONDS_IN_DAY","fromRpcSig","console","replace","_MAMPWeb_HydroIce_HydroIceDapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","to","component","Link","ProgressIcon","withTheme","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_3___default","size","typography","button","fontSize","TransactionButton","show","onTransactionHash","transactionOptions","_useTransactionManage","useTransactionManager","handlers","transactionHash","receipt","_useTransactionManage2","_MAMPWeb_HydroIce_HydroIceDapp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","transactionState","transactionData","sendTransaction","resetTransaction","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","display","ready","sendingPending","success","defaultProps","primary","contrastText","&:hover","dark","grey","getContrastText","_interopRequireDefault","__webpack_require__","defineProperty","exports","default","_react","_default","d","fill","SignatureButton","_useSignPersonalManag","useSignPersonalManager","_useSignPersonalManag2","signatureState","signPersonal","resetSignature","_typeof","Symbol","iterator","obj","constructor","prototype","createKeccakHash","secp256k1","assert","rlp","BN","createHash","Buffer","assign","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","KECCAK256_NULL","from","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_S","KECCAK256_RLP","zeros","bytes","allocUnsafe","zeroAddress","bufferToHex","setLengthLeft","setLength","msg","length","right","buf","toBuffer","copy","slice","setLengthRight","unpad","stripZeros","first","stripHexPrefix","toString","isBuffer","Array","isArray","isHexString","padToEven","intToBuffer","isBN","toArrayLike","toArray","bufferToInt","toNumber","fromSigned","num","fromTwos","toUnsigned","toTwos","keccak","bits","update","digest","keccak256","sha256","ripemd160","padded","hash","rlphash","encode","isValidPrivate","privateKey","privateKeyVerify","isValidPublic","publicKey","sanitize","publicKeyVerify","pubToAddress","publicToAddress","pubKey","publicKeyConvert","privateToPublic","publicKeyCreate","calculateSigRecovery","chainId","isValidSigRecovery","recovery","importPublic","ecsign","msgHash","sig","sign","ret","hashPersonalMessage","prefix","ecrecover","senderPubKey","recover","privateToAddress","isValidAddress","address","test","isZeroAddress","addHexPrefix","toChecksumAddress","i","parseInt","toUpperCase","generateAddress","nonce","isZero","generateAddress2","salt","initCode","isPrecompiled","str","isHexPrefixed","isValidSignature","homestead","SECP256K1_N_DIV_2","SECP256K1_N","gt","cmp","baToJSON","ba","array","push","defineProperties","self","fields","data","raw","_fields","toJSON","forEach","field","this","serialize","getter","setter","allowZero","allowLess","name","enumerable","configurable","get","set","alias","decode","keys","indexOf"],"mappings":"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","file":"static/js/47.9b1052c7.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { withRouter } from 'react-router'\nimport { withStyles } from '@material-ui/core/styles';\nimport { getEtherscanLink } from 'web3-react/utilities'\nimport { useAccountEffect, useWeb3Context } from 'web3-react/hooks'\nimport { Link, Redirect } from 'react-router-dom'\nimport { TextField } from '@material-ui/core';\nimport { fromRpcSig, toRpcSig, isValidChecksumAddress } from 'ethereumjs-util'\n\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport { useNamedContract, useEIN, useSessionStorageState } from '../../common/hooks'\nimport TransactionButton from '../common/TransactionButton'\nimport SignatureButton from '../common/SignatureButton'\nimport Copyable from '../common/Copyable'\n\nconst styles = theme => ({\n  snackbar: {\n    maxWidth: '45%'\n  },\n  warning: {\n    backgroundColor: theme.palette.error.main\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  white: {\n    color: \"white\"\n  }\n})\n\nconst SECONDS_IN_DAY = 60 * 60 * 24\n\nfunction SignWithApproving ({ ein, setCurrentClaim }) {\n  const context = useWeb3Context()\n  const _1484Contract = useNamedContract('1484')\n\n  const [targetAddress, setTargetAddress] = useState('')\n  const [targetAddressError, setTargetAddressError] = useState(undefined)\n\n  useAccountEffect(() => {\n    if (targetAddress === '') {\n      setTargetAddressError(undefined)\n      return\n    }\n    else {\n      if (!isValidChecksumAddress(targetAddress)) {\n        setTargetAddressError('Invalid address.')\n        return\n      }\n\n      _1484Contract.methods.hasIdentity(targetAddress).call()\n        .then(result => {\n          if (result)\n            setTargetAddressError('Address is already associated with an Identity.')\n          else\n            setTargetAddressError(null)\n        })\n    }\n  }, [targetAddress])\n\n  const [activeStep, setActiveStep] = useState(0)\n\n  function stepBack () { setActiveStep(activeStep - 1) }\n  function stepForward () { setActiveStep(activeStep + 1) }\n\n  const timestamp = useRef(Math.round(new Date() / 1000) - 120)\n  const message = targetAddressError !== null ? null : context.library.utils.soliditySha3(\n    '0x19', '0x00', _1484Contract._address,\n    'I authorize adding this address to my Identity.',\n    ein,\n    targetAddress,\n    timestamp.current\n  )\n\n  return (\n    <>\n      <Typography variant='h4' gutterBottom color=\"textPrimary\">\n        Link a new address to your EIN.\n      </Typography>\n\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        <Step key={0}>\n          <StepLabel>{activeStep === 0 ? 'Address to Add' : `Address to Add: ${targetAddress}`}</StepLabel>\n          <StepContent>\n            Enter the address you wish to claim under your current identity. You need to be able to transact from this address.\n            <TextField\n              key='Address to Add'\n              label='Address to Add'\n              helperText={!targetAddressError ? 'You will need to transact from this address.' : targetAddressError}\n              error={!!targetAddressError}\n              required\n              margin=\"normal\"\n              value={targetAddress}\n              onChange={e => setTargetAddress(e.target.value)}\n              fullWidth\n            />\n            <Button\n              variant=\"contained\"\n              disabled={targetAddress === '' || targetAddressError !== null}\n              onClick={stepForward}\n            >\n              Next\n            </Button>\n          </StepContent>\n        </Step>\n\n        <Step key={1}>\n          <StepLabel>Give Permission</StepLabel>\n          <StepContent>\n            The next step is for you to give us permission to link this address to your Identity. This requires your signature of a hashed permission string.\n            <br />\n            <Button\n              variant=\"contained\"\n              style={{marginRight: '15px'}}\n              onClick={stepBack}\n            >\n              Back\n            </Button>\n            <SignatureButton\n              readyText='Sign'\n              message={message}\n              onSuccess={signature => {\n                setCurrentClaim({\n                  targetAddress: targetAddress,\n                  targetIsApproving: 0,\n                  signingAddress: context.account,\n                  signature: signature,\n                  timestamp: timestamp.current\n                })\n              }}\n            />\n          </StepContent>\n        </Step>\n      </Stepper>\n    </>\n  )\n}\n\nconst ApproveClaim = withStyles(styles)(function ApproveClaim ({ classes, location, claim, deleteCurrentClaim, setRedirect }) {\n  const context = useWeb3Context()\n  const _1484Contract = useNamedContract('1484')\n  const ein = useEIN(claim.targetIsApproving ? claim.targetAddress : claim.signingAddress)\n\n  function getUrlFromClaim ({ targetAddress, targetIsApproving, signingAddress, signature, timestamp}) {\n    const { v, r, s } = signature\n    const encodedSignature = toRpcSig(v, r, s)\n    return [\n      window.location.origin,\n      process.env.PUBLIC_URL,\n      location.pathname,\n      `/${targetAddress}/${Number(targetIsApproving)}/${signingAddress}/${encodedSignature}/${timestamp}`\n    ].join('')\n  }\n\n  if (!ein) return null\n\n  if (context.account.toLowerCase() === claim.targetAddress.toLowerCase())\n    return (\n      <>\n        <Typography gutterBottom color=\"textPrimary\">\n          Finalize the link between this address (\n          <a\n            href={getEtherscanLink(context.networkId, 'address', context.account)}\n            className={classes.link}\n            target=\"_blank\" rel='noopener noreferrer'\n          >\n            {context.account}\n          </a>\n          ) and your EIN ({ein}).\n        </Typography>\n\n        <TransactionButton\n          readyText='Finalize'\n          method={() => _1484Contract.methods.addAssociatedAddress(\n            claim.targetIsApproving ? claim.targetAddress : claim.signingAddress,\n            claim.targetIsApproving ? claim.signingAddress : claim.targetAddress,\n            claim.signature.v, claim.signature.r, claim.signature.s, claim.timestamp\n          )}\n          onConfirmation={() => {\n            setRedirect(true)\n            deleteCurrentClaim()\n            context.forceAccountReRender()\n          }}\n        />\n\n        <Button onClick={deleteCurrentClaim}>\n          Delete Claim\n          <DeleteIcon className={classes.rightIcon} />\n        </Button>\n      </>\n    )\n\n  return (\n    <>\n      <Typography gutterBottom color=\"textPrimary\">\n        Claim detected! Please switch to{' '}\n        <a\n          href={getEtherscanLink(context.networkId, 'address', claim.targetAddress)}\n          className={classes.link}\n          target=\"_blank\" rel='noopener noreferrer'\n          >\n          {claim.targetAddress}\n        </a>\n        {' '}to finalize your claim.\n      </Typography>\n\n      <Typography gutterBottom color=\"textPrimary\">\n        If that account is only available on another devices, you may finalize the claim by visiting this URL:\n      </Typography>\n      <Copyable key=\"copy\" placement=\"top\" value={getUrlFromClaim(claim)}>\n        <Button>\n          Copy Link\n          <FileCopyIcon className={classes.rightIcon} />\n        </Button>\n      </Copyable>\n      <Typography gutterBottom color=\"textPrimary\">\n        You may also delete this claim if you no longer wish to link your address:\n      </Typography>\n      <Button onClick={deleteCurrentClaim}>\n        Delete Claim\n        <DeleteIcon className={classes.rightIcon} />\n      </Button>\n    </>\n  )\n})\n\nexport default withRouter(function FinalizeClaim ({ ein, location, history }) {\n  const context = useWeb3Context()\n  const [currentClaim, setCurrentClaim, deleteCurrentClaim] = useSessionStorageState(\n    null, `SnowflakeClaim|${context.networkId}`\n  )\n  const [redirect, setRedirect] = useState(false)\n\n  // one-time state initialization\n  useEffect(() => {\n    if (location.state) {\n      try {\n        if (!isValidChecksumAddress(location.state.targetAddress)) throw Error('Invalid target address.')\n        if (![0, 1].includes(Number(location.state.targetIsApproving))) throw Error('Invalid targetIsApproving flag.')\n        if (!isValidChecksumAddress(location.state.signingAddress)) throw Error('Invalid signing address.')\n        if (!Number.isInteger(Number(location.state.timestamp))) throw Error('Invalid timestamp.')\n        const now = Math.round(Date.now() / 1000)\n        if (Number(location.state.timestamp) < now - (SECONDS_IN_DAY * .95)) throw Error('Timestamp too old.')\n        if (Number(location.state.timestamp) > now) throw Error('Timestamp in the future.')\n\n        setCurrentClaim({\n          targetAddress: location.state.targetAddress,\n          targetIsApproving: !!Number(location.state.targetIsApproving),\n          signingAddress: location.state.signingAddress,\n          signature: fromRpcSig(location.state.signature),\n          timestamp: Number(location.state.timestamp)\n        })\n      } catch (e) {\n        console.error('Error parsing arguments passed in the URL.', e) // eslint-disable-line no-console\n      } finally {\n        history.replace({...location, state: undefined})\n      }\n    }\n  }, [])\n\n  if (redirect) return <Redirect to='/'/>\n\n  return (\n    <>\n      {!ein && !currentClaim &&\n        <>\n          <Typography gutterBottom color=\"textPrimary\">\n            If you are trying to link your current account to an existing identity, you need a signature! Visit your existing Provider to get one.\n          </Typography>\n          <Button component={Link} to=\"/\">Creating a new Identity?</Button>\n        </>\n      }\n      {ein && !currentClaim &&\n        <SignWithApproving ein={ein} setCurrentClaim={setCurrentClaim} deleteCurrentClaim={deleteCurrentClaim} />\n      }\n      {currentClaim &&\n        <ApproveClaim\n          claim={currentClaim} location={location} deleteCurrentClaim={deleteCurrentClaim} setRedirect={setRedirect}\n        />\n      }\n    </>\n  )\n})\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withTheme, withStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport { useWeb3Context, useTransactionManager } from \"web3-react/hooks\";\nimport { getEtherscanLink } from \"web3-react/utilities\";\n\nconst styles = theme => ({\n  ready: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    \"&:hover\": {\n      backgroundColor: theme.palette.primary.dark\n    }\n  },\n  sendingPending: {\n    backgroundColor: theme.palette.grey[300],\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    \"&:hover\": {\n      backgroundColor: theme.palette.grey[500]\n    }\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    \"&:hover\": {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  success: {\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.success.contrastText,\n    \"&:hover\": {\n      backgroundColor: theme.palette.success.dark\n    }\n  }\n});\n\nconst ProgressIcon = withTheme()(({ theme }) => (\n  <CircularProgress size={theme.typography.button.fontSize} />\n));\n\nfunction TransactionButton({\n  show,\n  method,\n  readyText,\n  classes,\n  onTransactionHash,\n  onConfirmation,\n  transactionOptions,\n  disabled\n}) {\n  const context = useWeb3Context();\n  const [\n    transactionState,\n    transactionData,\n    sendTransaction,\n    resetTransaction\n  ] = useTransactionManager(method, {\n    handlers: { transactionHash: onTransactionHash, receipt: onConfirmation },\n    transactionOptions: transactionOptions\n  });\n\n  switch (transactionState) {\n    case \"ready\":\n      return (\n        <Button\n          style={show ? undefined : { display: \"none\" }}\n          variant=\"contained\"\n          onClick={sendTransaction}\n          className={classes.ready}\n          disabled={disabled}\n        >\n          {readyText}\n        </Button>\n      );\n    case \"sending\":\n      return (\n        <Button\n          style={show ? undefined : { display: \"none\" }}\n          variant=\"contained\"\n          disabled={true}\n          className={classes.sendingPending}\n        >\n          <ProgressIcon />\n        </Button>\n      );\n    case \"pending\":\n      return (\n        <Button\n          style={show ? undefined : { display: \"none\" }}\n          variant=\"contained\"\n          className={classes.sendingPending}\n          component=\"a\"\n          href={getEtherscanLink(\n            context.networkId,\n            \"transaction\",\n            transactionData.transactionHash\n          )}\n          target=\"_blank\"\n        >\n          <span>\n            Pending Confirmation <ProgressIcon />\n          </span>\n        </Button>\n      );\n    case \"success\":\n      return (\n        <Button\n          style={show ? undefined : { display: \"none\" }}\n          variant=\"contained\"\n          className={classes.success}\n          component=\"a\"\n          href={getEtherscanLink(\n            context.networkId,\n            \"transaction\",\n            transactionData.transactionHash\n          )}\n          target=\"_blank\"\n        >\n          <span>Success!</span>\n        </Button>\n      );\n    case \"error\":\n      return (\n        <Button\n          style={show ? undefined : { display: \"none\" }}\n          variant=\"contained\"\n          onClick={resetTransaction}\n          className={classes.error}\n        >\n          <span>Error. Retry?</span>\n        </Button>\n      );\n    default:\n      throw Error(\"This should not happen™.\");\n  }\n}\n\nTransactionButton.propTypes = {\n  show: PropTypes.bool,\n  method: PropTypes.func.isRequired,\n  readyText: PropTypes.node.isRequired,\n  classes: PropTypes.object.isRequired,\n  onTransactionHash: PropTypes.func,\n  onConfirmation: PropTypes.func,\n  transactionOptions: PropTypes.object\n};\n\nTransactionButton.defaultProps = {\n  show: true,\n  onTransactionHash: () => {},\n  onConfirmation: () => {}\n};\n\nexport default withStyles(styles)(TransactionButton);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n})), 'Delete');\n\nexports.default = _default;","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { withTheme, withStyles } from '@material-ui/core/styles'\nimport PropTypes from 'prop-types';\nimport { useSignPersonalManager } from 'web3-react/hooks'\n\nconst styles = theme => ({\n  ready: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.primary.dark\n    }\n  },\n  sendingPending: {\n    backgroundColor: theme.palette.grey[300],\n    color: theme.palette.getContrastText(theme.palette.grey[300]),\n    '&:hover': {\n      backgroundColor: theme.palette.grey[500]\n    }\n  },\n  error: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.error.dark\n    }\n  },\n  success: {\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.success.contrastText,\n    '&:hover': {\n      backgroundColor: theme.palette.success.dark\n    }\n  }\n})\n\nconst ProgressIcon = withTheme()(({ theme }) => <CircularProgress size={theme.typography.button.fontSize} />)\n\nfunction SignatureButton ({ show, message, readyText, classes, onSuccess }) {\n  // eslint-disable-next-line no-unused-vars\n  const [signatureState, _, signPersonal, resetSignature] = useSignPersonalManager(\n    message, { handlers: { success: onSuccess } }\n  )\n\n  switch (signatureState) {\n    case 'ready':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          onClick={signPersonal}\n          className={classes.ready}\n        >\n          {readyText}\n        </Button>\n      )\n    case 'pending':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          disabled={true}\n          className={classes.sendingPending}\n        >\n          <ProgressIcon />\n        </Button>\n      )\n    case 'success':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          className={classes.success}\n        >\n          <span>Success!</span>\n        </Button>\n      )\n    case 'error':\n      return (\n        <Button\n          style={show ? undefined : {display: 'none'}}\n          variant=\"contained\"\n          onClick={resetSignature}\n          className={classes.error}\n        >\n          <span>Error. Retry?</span>\n        </Button>\n      )\n    default:\n      throw Error('This should not happen™.')\n  }\n}\n\nSignatureButton.propTypes = {\n  show:              PropTypes.bool,\n  message:           PropTypes.string.isRequired,\n  readyText:         PropTypes.node.isRequired,\n  classes:           PropTypes.object.isRequired,\n  onSuccess:         PropTypes.func\n}\n\nSignatureButton.defaultProps = {\n  show:              true,\n  onSuccess: () => {},\n}\n\nexport default withStyles(styles)(SignatureButton)\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  fill: \"none\",\n  d: \"M0 0h24v24H0z\"\n}), _react.default.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n})), 'FileCopy');\n\nexports.default = _default;","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar createKeccakHash = require('keccak');\n\nvar secp256k1 = require('secp256k1');\n\nvar assert = require('assert');\n\nvar rlp = require('rlp');\n\nvar BN = require('bn.js');\n\nvar createHash = require('create-hash');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nObject.assign(exports, require('ethjs-util'));\n/**\n * the max integer that this VM can handle (a ```BN```)\n * @var {BN} MAX_INTEGER\n */\n\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256 (a ```BN```)\n * @var {BN} TWO_POW256\n */\n\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null (a ```String```)\n * @var {String} KECCAK256_NULL_S\n */\n\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_NULL\n */\n\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array (a ```String```)\n * @var {String} KECCAK256_RLP_ARRAY_S\n */\n\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP_ARRAY\n */\n\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null  (a ```String```)\n * @var {String} KECCAK256_RLP_S\n */\n\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP\n */\n\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n * @var {Function}\n */\n\nexports.BN = BN;\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n * @var {Function}\n */\n\nexports.rlp = rlp;\n/**\n * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)\n * @var {Object}\n */\n\nexports.secp256k1 = secp256k1;\n/**\n * Returns a buffer filled with 0s\n * @method zeros\n * @param {Number} bytes  the number of bytes the buffer should be\n * @return {Buffer}\n */\n\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n  * Returns a zero address\n  * @method zeroAddress\n  * @return {String}\n  */\n\n\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var zeroAddress = exports.zeros(addressLength);\n  return exports.bufferToHex(zeroAddress);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @method lsetLength\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @param {Boolean} [right=false] whether to start padding form the left or right\n * @return {Buffer|Array}\n */\n\n\nexports.setLengthLeft = exports.setLength = function (msg, length, right) {\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n\n    return msg.slice(-length);\n  }\n};\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @return {Buffer|Array}\n */\n\n\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`\n * @param {Buffer|Array|String} a\n * @return {Buffer|Array|String}\n */\n\n\nexports.unpad = exports.stripZeros = function (a) {\n  a = exports.stripHexPrefix(a);\n  var first = a[0];\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param {*} v the value\n */\n\n\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (exports.isHexString(v)) {\n        v = Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = exports.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n};\n/**\n * Converts a `Buffer` to a `Number`\n * @param {Buffer} buf\n * @return {Number}\n * @throws If the input number exceeds 53 bits.\n */\n\n\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a hex `String`\n * @param {Buffer} buf\n * @return {String}\n */\n\n\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param {Buffer} num\n * @return {BN}\n */\n\n\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param {BN} num\n * @return {Buffer}\n */\n\n\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Creates Keccak hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the Keccak width\n * @return {Buffer}\n */\n\n\nexports.keccak = function (a, bits) {\n  a = exports.toBuffer(a);\n  if (!bits) bits = 256;\n  return createKeccakHash('keccak' + bits).update(a).digest();\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256)\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\n\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\n\nexports.sha256 = function (a) {\n  a = exports.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n/**\n * Creates RIPEMD160 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Boolean} padded whether it should be padded to 256 bits or not\n * @return {Buffer}\n */\n\n\nexports.ripemd160 = function (a, padded) {\n  a = exports.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n\n  if (padded === true) {\n    return exports.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\n\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n * @param {Buffer} privateKey\n * @return {Boolean}\n */\n\n\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param {Buffer} publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Boolean}\n */\n\n\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Buffer}\n */\n\n\nexports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {\n  pubKey = exports.toBuffer(pubKey);\n\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n\n  assert(pubKey.length === 64); // Only take the lower 160bits of the hash\n\n  return exports.keccak(pubKey).slice(-20);\n};\n/**\n * Returns the ethereum public key of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\n\n\nvar privateToPublic = exports.privateToPublic = function (privateKey) {\n  privateKey = exports.toBuffer(privateKey); // skip the type flag and use the X, Y points\n\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n * @param {Buffer} publicKey\n * @return {Buffer}\n */\n\n\nexports.importPublic = function (publicKey) {\n  publicKey = exports.toBuffer(publicKey);\n\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n\n  return publicKey;\n};\n/**\n * ECDSA sign\n * @param {Buffer} msgHash\n * @param {Buffer} privateKey\n * @param {Number} [chainId]\n * @return {Object}\n */\n\n\nexports.ecsign = function (msgHash, privateKey, chainId) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n  var ret = {};\n  ret.r = sig.signature.slice(0, 32);\n  ret.s = sig.signature.slice(32, 64);\n  ret.v = chainId ? sig.recovery + (chainId * 2 + 35) : sig.recovery + 27;\n  return ret;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n * @param message\n * @returns {Buffer} hash\n */\n\n\nexports.hashPersonalMessage = function (message) {\n  var prefix = exports.toBuffer('\\x19Ethereum Signed Message:\\n' + message.length.toString());\n  return exports.keccak(Buffer.concat([prefix, message]));\n};\n/**\n * ECDSA public key recovery from signature\n * @param {Buffer} msgHash\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Number} [chainId]\n * @return {Buffer} publicKey\n */\n\n\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64);\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  }\n\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Number} [chainId]\n * @return {String} sig\n */\n\n\nexports.toRpcSig = function (v, r, s, chainId) {\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  } // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n\n\n  return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * @param {String} sig\n * @return {Object}\n */\n\n\nexports.fromRpcSig = function (sig) {\n  sig = exports.toBuffer(sig); // NOTE: with potential introduction of chainId this might need to be updated\n\n  if (sig.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = sig[64]; // support both versions of `eth_sign` responses\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: sig.slice(0, 32),\n    s: sig.slice(32, 64)\n  };\n};\n/**\n * Returns the ethereum address of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\n\n\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(privateToPublic(privateKey));\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too\n * @param {String} address\n * @return {Boolean}\n */\n\n\nexports.isValidAddress = function (address) {\n  return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n  * Checks if a given address is a zero address\n  * @method isZeroAddress\n  * @param {String} address\n  * @return {Boolean}\n  */\n\n\nexports.isZeroAddress = function (address) {\n  var zeroAddress = exports.zeroAddress();\n  return zeroAddress === exports.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address\n * @param {String} address\n * @return {String}\n */\n\n\nexports.toChecksumAddress = function (address) {\n  address = exports.stripHexPrefix(address).toLowerCase();\n  var hash = exports.keccak(address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n/**\n * Checks if the address is a valid checksummed address\n * @param {Buffer} address\n * @return {Boolean}\n */\n\n\nexports.isValidChecksumAddress = function (address) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;\n};\n/**\n * Generates an address of a newly created contract\n * @param {Buffer} from the address which is creating this new address\n * @param {Buffer} nonce the nonce of the from account\n * @return {Buffer}\n */\n\n\nexports.generateAddress = function (from, nonce) {\n  from = exports.toBuffer(from);\n  nonce = new BN(nonce);\n\n  if (nonce.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    nonce = null;\n  } else {\n    nonce = Buffer.from(nonce.toArray());\n  } // Only take the lower 160bits of the hash\n\n\n  return exports.rlphash([from, nonce]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2\n * @param {Buffer} from the address which is creating this new address\n * @param {Buffer} salt a salt\n * @param {Buffer} initCode the init code of the contract being created\n * @return {Buffer}\n */\n\n\nexports.generateAddress2 = function (from, salt, initCode) {\n  from = exports.toBuffer(from);\n  salt = exports.toBuffer(salt);\n  initCode = exports.toBuffer(initCode);\n  assert(from.length === 20);\n  assert(salt.length === 32);\n  var address = exports.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, exports.keccak256(initCode)]));\n  return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium)\n * @param {Buffer|String} address\n * @return {Boolean}\n */\n\n\nexports.isPrecompiled = function (address) {\n  var a = exports.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\"\n * @param {String} str\n * @return {String}\n */\n\n\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return exports.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Validate ECDSA signature\n * @method isValidSignature\n * @param {Buffer} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Boolean} [homestead=true]\n * @param {Number} [chainId]\n * @return {Boolean}\n */\n\n\nexports.isValidSignature = function (v, r, s, homestead, chainId) {\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false;\n  }\n\n  r = new BN(r);\n  s = new BN(s);\n\n  if (r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homestead === false && new BN(s).cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON\n * @param {Buffer|Array} ba\n * @return {Array|String|null}\n */\n\n\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return '0x' + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n\n    return array;\n  }\n};\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param {Object} self the `Object` to define properties on\n * @param {Array} fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param {*} data data to be validated against the definitions\n */\n\n\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = []; // attach the `toJSON`\n\n  self.toJSON = function (label) {\n    if (label) {\n      var obj = {};\n\n      self._fields.forEach(function (field) {\n        obj[field] = '0x' + self[field].toString('hex');\n      });\n\n      return obj;\n    }\n\n    return exports.baToJSON(this.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n\n    function getter() {\n      return self.raw[i];\n    }\n\n    function setter(v) {\n      v = exports.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = exports.stripZeros(v);\n        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes');\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    } // attach alias\n\n\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  }); // if the constuctor is passed data\n\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(exports.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      } // make sure all the items are buffers\n\n\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = exports.toBuffer(d);\n      });\n    } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n      var keys = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};\n\nfunction calculateSigRecovery(v, chainId) {\n  return chainId ? v - (2 * chainId + 35) : v - 27;\n}\n\nfunction isValidSigRecovery(recovery) {\n  return recovery === 0 || recovery === 1;\n}"],"sourceRoot":""}