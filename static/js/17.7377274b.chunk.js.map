{"version":3,"sources":["components/routes/FinalizeClaim.js","../node_modules/invariant/browser.js","../node_modules/react-router/es/Route.js","../node_modules/react-router/es/matchPath.js","../node_modules/path-to-regexp/index.js","../node_modules/react-router/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/isarray/index.js","../node_modules/react-router/es/withRouter.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","withStyles","theme","snackbar","maxWidth","success","backgroundColor","palette","main","warning","error","rightIcon","marginLeft","spacing","unit","close","white","color","withRouter","a","createElement","variant","gutterBottom","module","exports","condition","format","b","c","d","e","f","undefined","Error","args","argIndex","replace","name","framesToPop","warning__WEBPACK_IMPORTED_MODULE_0__","warning__WEBPACK_IMPORTED_MODULE_0___default","invariant__WEBPACK_IMPORTED_MODULE_1__","invariant__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","_matchPath__WEBPACK_IMPORTED_MODULE_4__","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_possibleConstructorReturn","self","ReferenceError","isEmptyChildren","children","Children","count","Route","_React$Component","_temp","_this","instance","Constructor","TypeError","_classCallCheck","this","_len","Array","_key","apply","concat","state","match","computeMatch","props","context","router","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","getChildContext","route","location","_ref","computedMatch","path","strict","exact","sensitive","pathname","componentWillMount","component","render","componentWillReceiveProps","nextProps","nextContext","setState","_props","_context$router","history","staticContext","only","Component","propTypes","object","string","bool","func","oneOfType","node","contextTypes","shape","isRequired","childContextTypes","path_to_regexp__WEBPACK_IMPORTED_MODULE_0__","path_to_regexp__WEBPACK_IMPORTED_MODULE_0___default","patternCache","cacheCount","options","parent","_options","_options$exact","_options$strict","_options$sensitive","_compilePath","pattern","cacheKey","end","cache","keys","compiledPattern","re","compilePath","exec","url","values","slice","isExact","params","reduce","memo","index","isarray","pathToRegexp","parse","compile","str","tokensToFunction","tokensToRegExp","PATH_REGEXP","RegExp","join","res","tokens","defaultDelimiter","delimiter","m","escaped","offset","next","prefix","capture","group","modifier","asterisk","push","partial","repeat","optional","escapeGroup","escapeString","substr","encodeURIComponentPretty","encodeURI","charCodeAt","toString","toUpperCase","matches","obj","opts","data","encode","pretty","encodeURIComponent","token","segment","JSON","stringify","j","test","attachKeys","flags","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","REACT_STATICS","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","type","KNOWN_STATICS","caller","callee","arity","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","descriptor","isArray","arr","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2__","hoist_non_react_statics__WEBPACK_IMPORTED_MODULE_2___default","_Route__WEBPACK_IMPORTED_MODULE_3__","C","wrappedComponentRef","remainingProps","indexOf","_objectWithoutProperties","routeComponentProps","ref","WrappedComponent"],"mappings":"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","file":"static/js/17.7377274b.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Typography } from '@material-ui/core';\n// import { Button, TextField } from '@material-ui/core';\n// import { Snackbar, SnackbarContent } from '@material-ui/core';\n// import IconButton from '@material-ui/core/IconButton';\n// import CloseIcon from '@material-ui/icons/Close';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import FileCopyIcon from '@material-ui/icons/FileCopy';\n// import { Link } from 'react-router-dom'\n//\n// import TransactionButton from '../common/TransactionButton'\n// import Copyable from '../common/Copyable'\n// import { getContract } from '../../common/utilities'\n\nconst styles = theme => ({\n  snackbar: {\n    maxWidth: '45%'\n  },\n  success: {\n    backgroundColor: theme.palette.success.main\n  },\n  warning: {\n    backgroundColor: theme.palette.error.main\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit\n  },\n  close: {\n    marginLeft: theme.spacing.unit / 2\n  },\n  white: {\n    color: \"white\"\n  }\n})\n\nexport default withStyles(styles)(withRouter(function FinalizeClaim () {\n  return (\n    <Typography variant='h4' gutterBottom color=\"textPrimary\">\n      Coming soon!\n    </Typography>\n  )\n}))\n//\n//   this.state = {\n//     finalizeAddress: '',\n//     finalizeSecret:  '',\n//     finalizeHydroId: '',\n//     claimAddress:    '',\n//     activeClaim:     undefined,\n//     claimSnackbar:   false,\n//     addressSnackbar: false\n//   }\n//\n//   const state = this.props.location.state || {}\n//   const claim = this.getClaim()\n//\n//   // try to set state from url\n//   if (state.address || state.secret || state.hydroId)\n//     this.state = {\n//       ...this.state,\n//       finalizeAddress: state.address,\n//       finalizeSecret:  state.secret,\n//       finalizeHydroId: state.hydroId,\n//       activeClaim:     {address: state.address, secret: state.secret, hydroId: state.hydroId},\n//       claimSnackbar:   true\n//     }\n//   // try to get claim from session storage\n//   else if (claim)\n//     this.state = {\n//       ...this.state,\n//       finalizeAddress: claim.address,\n//       finalizeSecret:  claim.secret,\n//       finalizeHydroId: claim.hydroId,\n//       activeClaim:     claim,\n//       claimSnackbar:   true\n//     }\n//\n//   // show snackbar if we need to\n//   if (\n//     this.state.activeClaim &&\n//     (this.props.w3w.account.toLowerCase() !== this.state.finalizeAddress.toLowerCase())\n//   )\n//     this.state = {\n//       ...this.state,\n//       addressSnackbar: true\n//     }\n//\n//   // get random value for new claims in case we need it\n//   const randomValues = new Uint32Array(1)\n//   window.crypto.getRandomValues(randomValues)\n//   this.hashedSecret = this.props.w3w.web3js.utils.sha3(randomValues[0].toString())\n// }\n//\n// getClaimKey() {\n//   return this.getContract('snowflake')._address\n// }\n//\n// getClaim() {\n//   let claim = sessionStorage.getItem(this.getClaimKey())\n//   return claim ? JSON.parse(claim) : null\n// }\n//\n// setClaim(address, secret, hydroId) {\n//   const claim = {address: address, secret: secret, hydroId: hydroId}\n//   sessionStorage.setItem(this.getClaimKey(), JSON.stringify(claim))\n// }\n//\n// removeClaim() {\n//   sessionStorage.removeItem(this.getClaimKey())\n// }\n//\n// deleteLocalClaim = () => {\n//   this.setState({\n//     finalizeAddress: '',\n//     finalizeSecret:  '',\n//     finalizeHydroId: '',\n//     activeClaim:     undefined,\n//     claimSnackbar:   false,\n//     addressSnackbar: false,\n//   })\n//\n//   this.removeClaim()\n//\n//   if (this.props.location.state)\n//     this.props.history.replace({\n//       ...this.props.location,\n//       state: {}\n//     })\n// }\n//\n// getUrlFromClaim = (claim) => {\n//   return !this.state.activeClaim ? '' :\n//     [\n//       window.location.origin,\n//       process.env.PUBLIC_URL,\n//       this.props.location.pathname,\n//       `/${claim.address}/${claim.secret}/${claim.hydroId}`\n//     ].join('')\n// }\n//\n// updateLocalClaim() {\n//   const { claimAddress } = this.state\n//   const { hydroId } = this.props\n//   const claim = this.props.w3w.web3js.utils.soliditySha3(claimAddress.toLowerCase(), this.hashedSecret, hydroId)\n//   this.claim = {address: claimAddress, secret: this.hashedSecret, hydroId: hydroId, claim: claim}\n// }\n//\n// render() {\n//   const { classes } = this.props\n//\n//   return (\n//     <div>\n//       <Snackbar\n//         anchorOrigin={{\n//           vertical: 'bottom',\n//           horizontal: 'left',\n//         }}\n//         autoHideDuration={10000}\n//         className={this.props.classes.snackbar}\n//         open={this.state.claimSnackbar}\n//         onClose={(e, reason) => reason === \"clickaway\" ? null : this.setState({ claimSnackbar: false })}\n//       >\n//         <SnackbarContent\n//           className={this.props.classes.success}\n//           message={<p>Claim detected! We{\"'\"}ve pre-filled the fields above.</p>}\n//           action={[\n//             <Button\n//               key=\"clear\"\n//               size=\"small\"\n//               onClick={this.deleteLocalClaim}\n//               className={classes.white}\n//             >\n//               Delete Claim\n//               <DeleteIcon className={classes.rightIcon} />\n//             </Button>,\n//             <IconButton\n//               key=\"close\"\n//               color=\"inherit\"\n//               className={classes.close}\n//               onClick={() => this.setState({claimSnackbar: false})}\n//             >\n//               <CloseIcon />\n//             </IconButton>\n//           ]}\n//         />\n//       </Snackbar>\n//\n//       {this.props.hydroId ? null :\n//         <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/\">Need a Snowflake?</Button>\n//       }\n//\n//       {!this.state.activeClaim ? null :\n//         <Snackbar\n//           anchorOrigin={{\n//             vertical: 'bottom',\n//             horizontal: 'right',\n//           }}\n//           className={this.props.classes.snackbar}\n//           open={this.state.addressSnackbar}\n//           onClose={(e, reason) => reason === \"clickaway\" ? null : this.setState({ addressSnackbar: false })}\n//         >\n//           <SnackbarContent\n//             className={this.props.classes.warning}\n//             message={\n//               <p>\n//                 Please switch to {this.state.activeClaim.address}, or visit the link to the right.\n//               </p>\n//             }\n//             action={[\n//               <Copyable key=\"copy\" placement=\"top\" value={this.getUrlFromClaim(this.state.activeClaim)}>\n//                 <Button\n//                   key=\"clear\"\n//                   size=\"small\"\n//                   className={classes.white}\n//                 >\n//                   Copy Link\n//                   <FileCopyIcon className={classes.rightIcon} />\n//                 </Button>\n//               </Copyable>\n//             ]}\n//           />\n//         </Snackbar>\n//       }\n//\n//\n//       <Typography variant='display1' gutterBottom color=\"textPrimary\">\n//         Finalize a Claim\n//       </Typography>\n//\n//       <Typography variant='body2' gutterBottom color=\"textPrimary\">\n//         Click below to finalize linking an address to your Snowflake.\n//       </Typography>\n//\n//       <TextField\n//         label='Hydro ID'\n//         margin=\"normal\"\n//         value={this.state.finalizeHydroId}\n//         onChange={e => this.setState({finalizeHydroId: e.target.value})}\n//         disabled={!!this.state.activeClaim}\n//         fullWidth\n//       />\n//\n//       <TextField\n//         label='Secret'\n//         type=\"password\"\n//         margin=\"normal\"\n//         value={this.state.finalizeSecret}\n//         onChange={e => this.setState({finalizeSecret: e.target.value})}\n//         disabled={!!this.state.activeClaim}\n//         fullWidth\n//       />\n//\n//       <TransactionButton\n//         buttonInitial='Finalize Claim'\n//         method={() => this.getContract('snowflake').methods.finalizeClaim(\n//           this.getClaim().secret, this.getClaim().hydroId\n//         )}\n//         onConfirmation={() => {\n//           this.removeClaim()\n//           this.props.getAccountDetails()\n//         }}\n//       />\n//\n//     {!this.props.hydroId || (this.state.activeClaim) ? null :\n//       <Fragment>\n//         <Typography variant='display1' gutterBottom color=\"textPrimary\" style={{marginTop: 20}}>\n//           Claim a New Address\n//         </Typography>\n//\n//         <Typography variant='body2' gutterBottom color=\"textPrimary\">\n//           Enter the address you{\"'\"}d like to claim below.\n//         </Typography>\n//\n//         <form noValidate autoComplete=\"off\">\n//           <TextField\n//             label='Address'\n//             helperText='Must be able to transact from this address'\n//             margin=\"normal\"\n//             value={this.state.claimAddress}\n//             onChange={e => {\n//               this.setState({claimAddress: e.target.value}, this.updateLocalClaim)\n//             }}\n//             fullWidth\n//           />\n//           <TransactionButton\n//             onConfirmation={() => {\n//               this.setState({\n//                 activeClaim: this.submittedClaim,\n//                 addressSnackbar: true\n//               })\n//             }}\n//             buttonInitial='Initiate Claim'\n//             method={() => {\n//               this.setClaim(this.claim.address, this.claim.secret, this.claim.hydroId)\n//               this.submittedClaim = this.claim\n//               return this.getContract('snowflake').methods.initiateClaim(this.claim.claim)}\n//             }\n//           />\n//         </form>\n//       </Fragment>\n//       }\n//     </div>\n//   )\n// }))\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function invariant(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n};\n\nmodule.exports = invariant;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport warning from \"warning\";\nimport invariant from \"invariant\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport matchPath from \"./matchPath\";\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n};\n/**\n * The public API for matching a single path and rendering.\n */\n\n\nvar Route = function (_React$Component) {\n  _inherits(Route, _React$Component);\n\n  function Route() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Route);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n      match: _this.computeMatch(_this.props, _this.context.router)\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Route.prototype.getChildContext = function getChildContext() {\n    return {\n      router: _extends({}, this.context.router, {\n        route: {\n          location: this.props.location || this.context.router.route.location,\n          match: this.state.match\n        }\n      })\n    };\n  };\n\n  Route.prototype.computeMatch = function computeMatch(_ref, router) {\n    var computedMatch = _ref.computedMatch,\n        location = _ref.location,\n        path = _ref.path,\n        strict = _ref.strict,\n        exact = _ref.exact,\n        sensitive = _ref.sensitive;\n    if (computedMatch) return computedMatch; // <Switch> already computed the match for us\n\n    invariant(router, \"You should not use <Route> or withRouter() outside a <Router>\");\n    var route = router.route;\n    var pathname = (location || route.location).pathname;\n    return matchPath(pathname, {\n      path: path,\n      strict: strict,\n      exact: exact,\n      sensitive: sensitive\n    }, route.match);\n  };\n\n  Route.prototype.componentWillMount = function componentWillMount() {\n    warning(!(this.props.component && this.props.render), \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\");\n    warning(!(this.props.component && this.props.children && !isEmptyChildren(this.props.children)), \"You should not use <Route component> and <Route children> in the same route; <Route children> will be ignored\");\n    warning(!(this.props.render && this.props.children && !isEmptyChildren(this.props.children)), \"You should not use <Route render> and <Route children> in the same route; <Route children> will be ignored\");\n  };\n\n  Route.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps, nextContext) {\n    warning(!(nextProps.location && !this.props.location), '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.');\n    warning(!(!nextProps.location && this.props.location), '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.');\n    this.setState({\n      match: this.computeMatch(nextProps, nextContext.router)\n    });\n  };\n\n  Route.prototype.render = function render() {\n    var match = this.state.match;\n    var _props = this.props,\n        children = _props.children,\n        component = _props.component,\n        render = _props.render;\n    var _context$router = this.context.router,\n        history = _context$router.history,\n        route = _context$router.route,\n        staticContext = _context$router.staticContext;\n    var location = this.props.location || route.location;\n    var props = {\n      match: match,\n      location: location,\n      history: history,\n      staticContext: staticContext\n    };\n    if (component) return match ? React.createElement(component, props) : null;\n    if (render) return match ? render(props) : null;\n    if (typeof children === \"function\") return children(props);\n    if (children && !isEmptyChildren(children)) return React.Children.only(children);\n    return null;\n  };\n\n  return Route;\n}(React.Component);\n\nRoute.propTypes = {\n  computedMatch: PropTypes.object,\n  // private, from <Switch>\n  path: PropTypes.string,\n  exact: PropTypes.bool,\n  strict: PropTypes.bool,\n  sensitive: PropTypes.bool,\n  component: PropTypes.func,\n  render: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n  location: PropTypes.object\n};\nRoute.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.object.isRequired,\n    route: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  })\n};\nRoute.childContextTypes = {\n  router: PropTypes.object.isRequired\n};\nexport default Route;","import pathToRegexp from \"path-to-regexp\";\nvar patternCache = {};\nvar cacheLimit = 10000;\nvar cacheCount = 0;\n\nvar compilePath = function compilePath(pattern, options) {\n  var cacheKey = \"\" + options.end + options.strict + options.sensitive;\n  var cache = patternCache[cacheKey] || (patternCache[cacheKey] = {});\n  if (cache[pattern]) return cache[pattern];\n  var keys = [];\n  var re = pathToRegexp(pattern, keys, options);\n  var compiledPattern = {\n    re: re,\n    keys: keys\n  };\n\n  if (cacheCount < cacheLimit) {\n    cache[pattern] = compiledPattern;\n    cacheCount++;\n  }\n\n  return compiledPattern;\n};\n/**\n * Public API for matching a URL pathname to a path pattern.\n */\n\n\nvar matchPath = function matchPath(pathname) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var parent = arguments[2];\n  if (typeof options === \"string\") options = {\n    path: options\n  };\n  var _options = options,\n      path = _options.path,\n      _options$exact = _options.exact,\n      exact = _options$exact === undefined ? false : _options$exact,\n      _options$strict = _options.strict,\n      strict = _options$strict === undefined ? false : _options$strict,\n      _options$sensitive = _options.sensitive,\n      sensitive = _options$sensitive === undefined ? false : _options$sensitive;\n  if (path == null) return parent;\n\n  var _compilePath = compilePath(path, {\n    end: exact,\n    strict: strict,\n    sensitive: sensitive\n  }),\n      re = _compilePath.re,\n      keys = _compilePath.keys;\n\n  var match = re.exec(pathname);\n  if (!match) return null;\n  var url = match[0],\n      values = match.slice(1);\n  var isExact = pathname === url;\n  if (exact && !isExact) return null;\n  return {\n    path: path,\n    // the path pattern used to match\n    url: path === \"/\" && url === \"\" ? \"/\" : url,\n    // the matched portion of the URL\n    isExact: isExact,\n    // whether or not we matched exactly\n    params: keys.reduce(function (memo, key, index) {\n      memo[key.name] = values[index];\n      return memo;\n    }, {})\n  };\n};\n\nexport default matchPath;","var isarray = require('isarray');\n/**\n * Expose `pathToRegexp`.\n */\n\n\nmodule.exports = pathToRegexp;\nmodule.exports.parse = parse;\nmodule.exports.compile = compile;\nmodule.exports.tokensToFunction = tokensToFunction;\nmodule.exports.tokensToRegExp = tokensToRegExp;\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7]; // Push the current path onto the tokens.\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Match any characters still remaining.\n\n\n  if (index < str.length) {\n    path += str.substr(index);\n  } // If the path exists, push it onto the end.\n\n\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeURIComponentPretty(str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeAsterisk(str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n}\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\n\n\nfunction attachKeys(re, keys) {\n  re.keys = keys;\n  return re;\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys);\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n  return attachKeys(regexp, keys);\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = ''; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter; // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys);\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path,\n    /** @type {!Array} */\n    keys);\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path,\n    /** @type {!Array} */\n    keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path,\n  /** @type {!Array} */\n  keys, options);\n}","'use strict';\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n\n    return targetComponent;\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport Route from \"./Route\";\n/**\n * A public higher-order component to access the imperative API\n */\n\nvar withRouter = function withRouter(Component) {\n  var C = function C(props) {\n    var wrappedComponentRef = props.wrappedComponentRef,\n        remainingProps = _objectWithoutProperties(props, [\"wrappedComponentRef\"]);\n\n    return React.createElement(Route, {\n      children: function children(routeComponentProps) {\n        return React.createElement(Component, _extends({}, remainingProps, routeComponentProps, {\n          ref: wrappedComponentRef\n        }));\n      }\n    });\n  };\n\n  C.displayName = \"withRouter(\" + (Component.displayName || Component.name) + \")\";\n  C.WrappedComponent = Component;\n  C.propTypes = {\n    wrappedComponentRef: PropTypes.func\n  };\n  return hoistStatics(C, Component);\n};\n\nexport default withRouter;"],"sourceRoot":""}